# Application Configuration
spring.application.name=customer-observer
server.port=${SERVER_PORT:8090}

# Logging Configuration
logging.level.com.revapps.observer=INFO
logging.level.io.dapr=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# DAPR Configuration
app.dapr.pubsub-name=${DAPR_PUBSUB_NAME:customer-pubsub}
app.dapr.topic-name=${DAPR_TOPIC_NAME:customer-events}

# Spring Boot Configuration
spring.main.banner-mode=console
spring.output.ansi.enabled=detect

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.diskspace.enabled=true
management.metrics.export.prometheus.enabled=true

# Disable OpenTelemetry auto-configuration for Observer applications
spring.autoconfigure.exclude=io.opentelemetry.instrumentation.spring.autoconfigure.OpenTelemetryAutoConfiguration
management.otlp.metrics.enabled=false
management.tracing.enabled=false

# Application Configuration
spring.application.name=customer-observer-reversible
logging.level.com.revapps=INFO
logging.level.io.dapr=WARN
spring.profiles.active=dev
spring.output.ansi.enabled=ALWAYS

# DAPR Configuration
dapr.api.host=${DAPR_API_HOST:localhost}
dapr.api.port=${DAPR_API_PORT:3500}
dapr.pubsub.name=${DAPR_PUBSUB_NAME:pubsub}
dapr.pubsub.topic.name=${DAPR_PUBSUB_TOPIC_NAME:customer-events}
